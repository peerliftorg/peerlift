{"ast":null,"code":"var _jsxFileName = \"/Users/samgorman/src/pl-connect/client/src/components/OppBox.js\";\nimport React, { Component } from 'react';\nimport '../components/OppBox.css';\nimport { withRouter, Link, BrowserRouter as Router, Switch, Route } from 'react-router-dom'; //can I store product ID as a variable in return? \n// //This is a constructor for a component \n\nconst OppBox = ({\n  id,\n  title,\n  amount,\n  grade,\n  date,\n  link,\n  onPress,\n  oppId\n}) => {\n  return React.createElement(\"div\", {\n    className: \"wrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"OppBoxWrapper\",\n    onClick: onPress,\n    oppId: id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \" \", title), React.createElement(\"div\", {\n    className: \"Tags\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Data\",\n    id: \"Amount\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \" \", amount), React.createElement(\"div\", {\n    className: \"Data\",\n    id: \"Grade\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, grade)), React.createElement(\"div\", {\n    className: \"Deadline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, date), React.createElement(\"div\", {\n    className: \"Text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \" Coca-Cola Scholars is a prestigious four-year grant of $ \"), React.createElement(\"div\", {\n    className: \"Cta\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Share\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \" Share \"), React.createElement(\"a\", {\n    href: link,\n    className: \"Apply\",\n    target: \"_blank\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \" Apply \"))));\n}; // class OppBox extends Component{\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       contacts: []\n//     };\n//   }\n//   componentDidMount() {\n//     fetch('http://localhost:9000/users')\n//       .then(res => res.json())\n//       .then((data) => {\n//         //data is an array, let's sort it by closest to current date\n//         data.sort(function(a,b){\n//           var currDate = new Date();\n//           //create date variables for each one\n//           var c = new Date(a.FilterDate);\n//           var d = new Date(b.FilterDate);\n//           var e = Math.abs(currDate-c);\n//           var f = Math.abs(currDate-d);\n//           return e-f;\n//         })\n//         this.setState({ contacts: data })\n//         //data is storing correct\n//         //console.log(this.state.contacts)\n//       })\n//       .catch(console.log)\n//   }\n//     //logic to filter\n//     // filterBySubstring(substr){\n//     //   var tagString = this.state.contacts.Tags;\n//     //   return tagString.includes(substr);\n//     // }\n//     //assume I can filter correctly with this function-- what next?\n//     //have to call this function each time a user clicks a button\n//     filterMain(word){\n//       //from the array\n//       const array = this.state.contacts;\n//       console.log('this is array'+array);\n//       const filtered = array.filter(val => {\n//         return val.Tags.includes(word);\n//       })\n//       return filtered;\n//     }\n//   render() {\n//     // const box = ({contacts}) => {\n//     //   console.log(this.state.contacts)\n//     // }\n//     return(\n//       <div className = 'wrapper'>\n//       {this.state.contacts.map((contact) =>\n//       //wrapper so it doesnt break\n//       <div className = \"OppBoxWrapper\">\n//       <div className = 'Title'> {contact.Title}</div>\n//       <div className = 'Tags'> \n//               <div className = 'Data' id = 'Amount'>{contact.DescriptionAmount}</div>\n//               <div className = 'Data' id = 'Grade'>{contact.Grade}</div>\n//       </div>\n//       <div className = 'Deadline'>{contact.DescriptionDate}</div>\n//       <div className = 'Text'> Coca-Cola Scholars is a prestigious four-year grant of $ </div>\n//       <div className = 'Cta'> \n//               <div className = 'Share'> Share </div>\n//               <a href = {contact.Link} className = 'Apply' target=\"_blank\"> Apply </a>\n//               </div>\n//       </div>\n//           )}\n//       </div>\n//     ); \n//   }\n// }\n\n\nexport default OppBox;","map":{"version":3,"sources":["/Users/samgorman/src/pl-connect/client/src/components/OppBox.js"],"names":["React","Component","withRouter","Link","BrowserRouter","Router","Switch","Route","OppBox","id","title","amount","grade","date","link","onPress","oppId"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,0BAAP;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,aAAa,IAAIC,MAA5C,EAAoDC,MAApD,EAA4DC,KAA5D,QAAyE,kBAAzE,C,CAGA;AACA;;AAEA,MAAMC,MAAM,GAAG,CAAE;AAACC,EAAAA,EAAD;AAAKC,EAAAA,KAAL;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA,KAApB;AAA2BC,EAAAA,IAA3B;AAAiCC,EAAAA,IAAjC;AAAuCC,EAAAA,OAAvC;AAAgDC,EAAAA;AAAhD,CAAF,KAA8D;AAE3E,SAEE;AAAK,IAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAQ,IAAA,SAAS,EAAG,eAApB;AAAoC,IAAA,OAAO,EAAED,OAA7C;AAAsD,IAAA,KAAK,EAAIN,EAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIA;AAAM,IAAA,SAAS,EAAG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA4BC,KAA5B,CAJA,EAMA;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAwB,IAAA,EAAE,EAAG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAwCC,MAAxC,CADR,EAEQ;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAwB,IAAA,EAAE,EAAG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsCC,KAAtC,CAFR,CANA,EAWA;AAAK,IAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,IAA7B,CAXA,EAYA;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAZA,EAeA;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AAAK,IAAA,SAAS,EAAG,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADR,EAEQ;AAAG,IAAA,IAAI,EAAIC,IAAX;AAAiB,IAAA,SAAS,EAAG,OAA7B;AAAqC,IAAA,MAAM,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFR,CAfA,CAFA,CAFF;AA2BD,CA7BD,C,CA+BA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,eAAeN,MAAf","sourcesContent":["import React, {Component} from 'react'; \nimport '../components/OppBox.css';\nimport { withRouter, Link, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\n\n//can I store product ID as a variable in return? \n// //This is a constructor for a component \n\nconst OppBox = ( {id, title, amount, grade, date, link, onPress, oppId} ) => {\n\n  return(\n\n    <div className = 'wrapper'>\n\n    <button className = \"OppBoxWrapper\" onClick={onPress} oppId = {id}>\n    \n\n\n    <div  className = 'Title'> {title}</div>\n\n    <div className = 'Tags'> \n            <div className = 'Data' id = 'Amount'> {amount}</div>\n            <div className = 'Data' id = 'Grade'>{grade}</div>\n    </div>\n\n    <div className = 'Deadline'>{date}</div>\n    <div className = 'Text'> Coca-Cola Scholars is a prestigious four-year grant of $ </div>\n\n\n    <div className = 'Cta'> \n            <div className = 'Share'> Share </div>\n            <a href = {link} className = 'Apply' target=\"_blank\"> Apply </a>\n            </div>\n\n    </button>\n    </div>\n  )\n}\n\n// class OppBox extends Component{\n\n//   constructor(props){\n//     super(props);\n//     this.state = {\n//       contacts: []\n//     };\n//   }\n\n//   componentDidMount() {\n//     fetch('http://localhost:9000/users')\n//       .then(res => res.json())\n//       .then((data) => {\n//         //data is an array, let's sort it by closest to current date\n//         data.sort(function(a,b){\n//           var currDate = new Date();\n//           //create date variables for each one\n//           var c = new Date(a.FilterDate);\n//           var d = new Date(b.FilterDate);\n\n//           var e = Math.abs(currDate-c);\n//           var f = Math.abs(currDate-d);\n//           return e-f;\n//         })\n//         this.setState({ contacts: data })\n//         //data is storing correct\n//         //console.log(this.state.contacts)\n//       })\n//       .catch(console.log)\n//   }\n\n//     //logic to filter\n//     // filterBySubstring(substr){\n//     //   var tagString = this.state.contacts.Tags;\n//     //   return tagString.includes(substr);\n//     // }\n\n//     //assume I can filter correctly with this function-- what next?\n//     //have to call this function each time a user clicks a button\n//     filterMain(word){\n//       //from the array\n//       const array = this.state.contacts;\n//       console.log('this is array'+array);\n\n//       const filtered = array.filter(val => {\n//         return val.Tags.includes(word);\n//       })\n//       return filtered;\n//     }\n\n    \n\n//   render() {\n//     // const box = ({contacts}) => {\n//     //   console.log(this.state.contacts)\n//     // }\n//     return(\n//       <div className = 'wrapper'>\n\n//       {this.state.contacts.map((contact) =>\n//       //wrapper so it doesnt break\n//       <div className = \"OppBoxWrapper\">\n//       <div className = 'Title'> {contact.Title}</div>\n\n//       <div className = 'Tags'> \n//               <div className = 'Data' id = 'Amount'>{contact.DescriptionAmount}</div>\n//               <div className = 'Data' id = 'Grade'>{contact.Grade}</div>\n//       </div>\n\n//       <div className = 'Deadline'>{contact.DescriptionDate}</div>\n//       <div className = 'Text'> Coca-Cola Scholars is a prestigious four-year grant of $ </div>\n\n\n//       <div className = 'Cta'> \n//               <div className = 'Share'> Share </div>\n//               <a href = {contact.Link} className = 'Apply' target=\"_blank\"> Apply </a>\n//               </div>\n//       </div>\n//           )}\n//       </div>\n\n//     ); \n//   }\n// }\n\nexport default OppBox;\n\n\n\n"]},"metadata":{},"sourceType":"module"}