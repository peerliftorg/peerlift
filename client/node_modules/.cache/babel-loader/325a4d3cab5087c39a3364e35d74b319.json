{"ast":null,"code":"var _jsxFileName = \"/Users/samgorman/src/pl-connect/client/src/components/oppPage.js\";\nimport React, { Component } from 'react';\nimport '../components/oppPage.css';\nimport Backdrop from '../components/backdrop.js';\nimport Opps from '../containers/Opps.js';\nimport OppBox from '../components/OppBox.js';\nimport ConfirmButton from '../components/confirmButton';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport shareButton from '../images/share@2x.png';\nimport { withRouter, Link, BrowserRouter as Router, Route } from 'react-router-dom'; //can I store product ID as a variable in return? \n// //This is a constructor for a component \n\nclass OppPage extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.copyToClipboard = e => {\n      // this.e.select();\n      var url = this.props.match.url; // this.props.match.url.select();\n\n      url.select();\n      document.execCommand('copy');\n      console.log(url); //e.target.focus();\n    };\n\n    this.state = {\n      content: [],\n      copied: false //id : this.props.match.params.id\n\n    };\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n  }\n\n  componentDidMount() {\n    //let idString = this.props.id;\n    fetch('http://localhost:9000/users' + '/' + this.props.match.params.id).then(res => res.json()).then(data => {\n      this.setState({\n        content: data\n      });\n    }).catch(console.log);\n  } //given a URL, this copies to clipboard \n\n\n  render() {\n    //console.log(idString)\n    console.log(this.props); //console.log(this.state.content)\n    // console.log(this.props.match.params.id)\n\n    var e;\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/scholarships\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Backdrop, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"OppPageWrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/scholarships\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"mobileGoBack\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Go back\")), React.createElement(\"div\", {\n      className: \"Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" \", this.state.content.Title), React.createElement(\"div\", {\n      className: \"Tags\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Data\",\n      id: \"Amount\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \" \", this.state.content.DescriptionAmount), React.createElement(\"div\", {\n      className: \"Data\",\n      id: \"Grade\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, this.state.content.Grade)), React.createElement(\"div\", {\n      className: \"Deadline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.content.DescriptionDate), React.createElement(\"div\", {\n      className: \"PageText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" \", this.state.content.Description, \" \"), React.createElement(\"div\", {\n      className: \"CtaPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(CopyToClipboard, {\n      text: \"http://localhost:3000\" + this.props.match.url,\n      onCopy: () => this.setState({\n        copied: true\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"SharePage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"ShareButton\",\n      id: \"ShareButtonPage\",\n      src: shareButton,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      id: \"ShareButtonText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \" Share \"))), React.createElement(\"a\", {\n      href: this.state.content.Link,\n      className: \"Apply\",\n      target: \"_blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \" Apply \"))), this.state.copied ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(ConfirmButton, {\n      text: \"Copied to clipboard\",\n      visible: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    })) : null);\n  }\n\n}\n\nexport default OppPage;","map":{"version":3,"sources":["/Users/samgorman/src/pl-connect/client/src/components/oppPage.js"],"names":["React","Component","Backdrop","Opps","OppBox","ConfirmButton","CopyToClipboard","shareButton","withRouter","Link","BrowserRouter","Router","Route","OppPage","constructor","props","copyToClipboard","e","url","match","select","document","execCommand","console","log","state","content","copied","bind","componentDidMount","fetch","params","id","then","res","json","data","setState","catch","render","Title","DescriptionAmount","Grade","DescriptionDate","Description"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,2BAAP;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAKA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,aAAa,IAAIC,MAA5C,EAAoDC,KAApD,QAAiE,kBAAjE,C,CAGA;AACA;;AAEA,MAAMC,OAAN,SAAsBb,KAAK,CAACC,SAA5B,CAAqC;AAEjCa,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAsBhBC,eAtBgB,GAsBGC,CAAD,IAAM;AACtB;AACA,UAAIC,GAAG,GAAG,KAAKH,KAAL,CAAWI,KAAX,CAAiBD,GAA3B,CAFsB,CAGtB;;AACAA,MAAAA,GAAG,CAACE,MAAJ;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,GAAZ,EAPsB,CAStB;AAED,KAjCe;;AAEd,SAAKO,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,MAAM,EAAE,KAFC,CAGT;;AAHS,KAAb;AAKA,SAAKX,eAAL,GAAuB,KAAKA,eAAL,CAAqBY,IAArB,CAA0B,IAA1B,CAAvB;AAEH;;AAGDC,EAAAA,iBAAiB,GAAG;AAChB;AACAC,IAAAA,KAAK,CAAC,gCAA8B,GAA9B,GAAkC,KAAKf,KAAL,CAAWI,KAAX,CAAiBY,MAAjB,CAAwBC,EAA3D,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd,WAAKC,QAAL,CAAc;AAAEX,QAAAA,OAAO,EAAEU;AAAX,OAAd;AACD,KAJH,EAKGE,KALH,CAKSf,OAAO,CAACC,GALjB;AAMD,GAtB8B,CAuB/B;;;AAgBFe,EAAAA,MAAM,GAAG;AACL;AACAhB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB,EAFK,CAGL;AACA;;AACA,QAAIE,CAAJ;AACA,WAEI;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CAFA,EAQC;AAAK,MAAA,SAAS,EAAG,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAG,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAG,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,CAFA,EAMD;AAAM,MAAA,SAAS,EAAG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA4B,KAAKQ,KAAL,CAAWC,OAAX,CAAmBc,KAA/C,CANC,EAQD;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACQ;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAwB,MAAA,EAAE,EAAG,QAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAwC,KAAKf,KAAL,CAAWC,OAAX,CAAmBe,iBAA3D,CADR,EAEQ;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAwB,MAAA,EAAE,EAAG,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAsC,KAAKhB,KAAL,CAAWC,OAAX,CAAmBgB,KAAzD,CAFR,CARC,EAaD;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKjB,KAAL,CAAWC,OAAX,CAAmBiB,eAAhD,CAbC,EAcD;AAAK,MAAA,SAAS,EAAG,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAA8B,KAAKlB,KAAL,CAAWC,OAAX,CAAmBkB,WAAjD,MAdC,EAiBD;AAAK,MAAA,SAAS,EAAG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE,0BAAwB,KAAK7B,KAAL,CAAWI,KAAX,CAAiBD,GAAhE;AACI,MAAA,MAAM,EAAE,MAAM,KAAKmB,QAAL,CAAc;AAACV,QAAAA,MAAM,EAAE;AAAT,OAAd,CADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGI;AAAQ,MAAA,SAAS,EAAG,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAG,aAAjB;AAA+B,MAAA,EAAE,EAAG,iBAApC;AAAsD,MAAA,GAAG,EAAEpB,WAA3D;AAAwE,MAAA,GAAG,EAAC,EAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEA;AAAG,MAAA,EAAE,EAAG,iBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAFA,CAHJ,CAFR,EAUQ;AAAG,MAAA,IAAI,EAAI,KAAKkB,KAAL,CAAWC,OAAX,CAAmBjB,IAA9B;AAAoC,MAAA,SAAS,EAAG,OAAhD;AAAwD,MAAA,MAAM,EAAC,QAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAVR,CAjBC,CARD,EAwCC,KAAKgB,KAAL,CAAWE,MAAX,GACO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,aAAD;AACA,MAAA,IAAI,EAAG,qBADP;AAEA,MAAA,OAAO,EAAI,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADP,GAOU,IA/CX,CAFJ;AAuDH;;AApGgC;;AAuGrC,eAAed,OAAf","sourcesContent":["import React, {Component} from 'react'; \nimport '../components/oppPage.css';\nimport Backdrop from '../components/backdrop.js';\nimport Opps from '../containers/Opps.js';\nimport OppBox from '../components/OppBox.js';\nimport ConfirmButton from '../components/confirmButton';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\nimport shareButton from '../images/share@2x.png';\n\n\n\n\nimport { withRouter, Link, BrowserRouter as Router, Route } from 'react-router-dom';\n\n\n//can I store product ID as a variable in return? \n// //This is a constructor for a component \n\nclass OppPage extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            content: [],\n            copied: false\n            //id : this.props.match.params.id\n        };\n        this.copyToClipboard = this.copyToClipboard.bind(this);\n\n    }\n\n\n    componentDidMount() {\n        //let idString = this.props.id;\n        fetch('http://localhost:9000/users'+'/'+this.props.match.params.id)\n          .then(res => res.json())\n          .then((data) => {\n            this.setState({ content: data })\n          })\n          .catch(console.log)\n      }\n      //given a URL, this copies to clipboard \n      copyToClipboard = (e) =>{\n        // this.e.select();\n        var url = this.props.match.url;\n        // this.props.match.url.select();\n        url.select();\n        document.execCommand('copy');\n\n        console.log(url);\n\n        //e.target.focus();\n\n      }\n\n      \n\n    render() {\n        //console.log(idString)\n        console.log(this.props)\n        //console.log(this.state.content)\n        // console.log(this.props.match.params.id)\n        var e;\n        return (\n\n            <div className = 'wrapper'>\n\n            <Link to = \"/scholarships\">\n            <Backdrop/> \n            </Link>\n\n            \n\n             <div className = \"OppPageWrapper\"  >\n             \n             <Link to = \"/scholarships\">\n             <div className = \"mobileGoBack\">Go back</div>\n            </Link>\n        \n            <div  className = 'Title'> {this.state.content.Title}</div>\n        \n            <div className = 'Tags'> \n                    <div className = 'Data' id = 'Amount'> {this.state.content.DescriptionAmount}</div>\n                    <div className = 'Data' id = 'Grade'>{this.state.content.Grade}</div>\n            </div>\n        \n            <div className = 'Deadline'>{this.state.content.DescriptionDate}</div>\n            <div className = 'PageText'> {this.state.content.Description} </div>\n        \n        \n            <div className = 'CtaPage'> \n\n                    <CopyToClipboard text={\"http://localhost:3000\"+this.props.match.url}\n                        onCopy={() => this.setState({copied: true})}>\n\n                        <button className = 'SharePage' >\n                        <img className = 'ShareButton' id = 'ShareButtonPage' src={shareButton} alt=\"\"></img>\n                        <p id = 'ShareButtonText'> Share </p>\n                        </button>\n                     </CopyToClipboard>\n                    <a href = {this.state.content.Link} className = 'Apply' target=\"_blank\"> Apply </a>\n                    </div>\n                    \n                   \n            </div> \n            {this.state.copied ? \n                    <React.Fragment>\n                     <ConfirmButton\n                     text = \"Copied to clipboard\"\n                     visible = {false}\n                     ></ConfirmButton>\n                      </React.Fragment>\n                     : null}\n         \n                     \n\n            </div>\n        );\n    }\n  }\n  \nexport default OppPage;\n\n"]},"metadata":{},"sourceType":"module"}