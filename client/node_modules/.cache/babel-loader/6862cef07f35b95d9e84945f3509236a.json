{"ast":null,"code":"var _jsxFileName = \"/Users/samgorman/src/pl-connect/client/src/containers/Opps.js\";\nimport React, { Component } from 'react';\nimport '../components/OppBox.css';\nimport Filters from \"../components/filters\";\nimport OppBox from '../components/OppBox';\nimport AddOpp from '../components/addOpp.js'; //need to import contacts to here\n// //This is a constructor for a component \n\nclass Opps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: []\n    }; // This binding is necessary to make `this` work in the callback-- added from tut\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/users').then(res => res.json()).then(data => {\n      //data is an array, let's sort it by closest to current date\n      data.sort(function (a, b) {\n        var currDate = new Date(); //create date variables for each one\n\n        var c = new Date(a.FilterDate);\n        var d = new Date(b.FilterDate);\n        var e = Math.abs(currDate - c);\n        var f = Math.abs(currDate - d);\n        return e - f;\n      });\n      this.setState({\n        contacts: data\n      }); //data is storing correct\n      //console.log(this.state.contacts)\n    }).catch(console.log);\n  } //filter the results\n\n\n  handleClick() {\n    //set the state of contacts at the end\n    alert(\"yoyo\"); //     const word = \"STEM\";\n    //     const array = this.state.contacts;\n    //     array.filter(val => {\n    //     return val.Tags.includes(word);\n    //   })\n    //     this.setState({contacts:array})\n  } // filterMain(word){\n  //   //from the array\n  //   const array = this.state.contacts;\n  //   console.log('this is array'+array);\n  //   const filtered = array.filter(val => {\n  //     return val.Tags.includes(word);\n  //   })\n  //   return filtered;\n  // }\n\n\n  render() {\n    //console.log(\"test\"+this.state.contacts)\n    return React.createElement(\"div\", {\n      className: \"filter-opp-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-filter-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Filters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add-box-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(SmartButton, {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(AddOpp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"opp-box-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(OppBox, {\n      contacts: this.state.contacts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}\n\nexport default Opps; //test to write a button that enables filters\n\nconst SmartButton = ({\n  contacts\n}) => {\n  return React.createElement(\"button\", {\n    className: \"filter-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Click Me \");\n};","map":{"version":3,"sources":["/Users/samgorman/src/pl-connect/client/src/containers/Opps.js"],"names":["React","Component","Filters","OppBox","AddOpp","Opps","constructor","props","state","contacts","handleClick","bind","componentDidMount","fetch","then","res","json","data","sort","a","b","currDate","Date","c","FilterDate","d","e","Math","abs","f","setState","catch","console","log","alert","render","SmartButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,0BAAP;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB,C,CAKA;AAEA;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA4B;AAE1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb,CAFgB,CAKf;;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACF;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,6BAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACAA,MAAAA,IAAI,CAACC,IAAL,CAAU,UAASC,CAAT,EAAWC,CAAX,EAAa;AACrB,YAAIC,QAAQ,GAAG,IAAIC,IAAJ,EAAf,CADqB,CAErB;;AACA,YAAIC,CAAC,GAAG,IAAID,IAAJ,CAASH,CAAC,CAACK,UAAX,CAAR;AACA,YAAIC,CAAC,GAAG,IAAIH,IAAJ,CAASF,CAAC,CAACI,UAAX,CAAR;AAEA,YAAIE,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASP,QAAQ,GAACE,CAAlB,CAAR;AACA,YAAIM,CAAC,GAAGF,IAAI,CAACC,GAAL,CAASP,QAAQ,GAACI,CAAlB,CAAR;AACA,eAAOC,CAAC,GAACG,CAAT;AACD,OATD;AAUA,WAAKC,QAAL,CAAc;AAAErB,QAAAA,QAAQ,EAAEQ;AAAZ,OAAd,EAZc,CAad;AACA;AACD,KAjBH,EAkBGc,KAlBH,CAkBSC,OAAO,CAACC,GAlBjB;AAmBD,GA/ByB,CAiCpB;;;AACAvB,EAAAA,WAAW,GAAG;AACd;AACAwB,IAAAA,KAAK,CAAC,MAAD,CAAL,CAFc,CAGlB;AACA;AACA;AACA;AACA;AACA;AACK,GA3CmB,CA+CxB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAIFC,EAAAA,MAAM,GAAG;AACP;AACA,WACI;AAAK,MAAA,SAAS,EAAG,oBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAG,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADF,EAKE;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAI,KAAKzB,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAGA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA;AAAK,MAAA,SAAS,EAAG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,EAAI,KAAKF,KAAL,CAAWC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,CAJA,CALF,CADJ;AAiBH;;AA/E2B;;AAkF5B,eAAeJ,IAAf,C,CAEA;;AACA,MAAM+B,WAAW,GAAG,CAAE;AAAC3B,EAAAA;AAAD,CAAF,KAAkB;AAElC,SACI;AAAQ,IAAA,SAAS,EAAG,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ;AAID,CANH","sourcesContent":["import React, {Component} from 'react'; \nimport '../components/OppBox.css';\nimport Filters from \"../components/filters\";\nimport OppBox from '../components/OppBox';\nimport AddOpp from '../components/addOpp.js';\n\n\n\n\n//need to import contacts to here\n\n// //This is a constructor for a component \n\nclass Opps extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      contacts: []\n    };\n     // This binding is necessary to make `this` work in the callback-- added from tut\n     this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/users')\n      .then(res => res.json())\n      .then((data) => {\n        //data is an array, let's sort it by closest to current date\n        data.sort(function(a,b){\n          var currDate = new Date();\n          //create date variables for each one\n          var c = new Date(a.FilterDate);\n          var d = new Date(b.FilterDate);\n\n          var e = Math.abs(currDate-c);\n          var f = Math.abs(currDate-d);\n          return e-f;\n        })\n        this.setState({ contacts: data })\n        //data is storing correct\n        //console.log(this.state.contacts)\n      })\n      .catch(console.log)\n  }\n\n        //filter the results\n        handleClick() {\n        //set the state of contacts at the end\n        alert(\"yoyo\");\n    //     const word = \"STEM\";\n    //     const array = this.state.contacts;\n    //     array.filter(val => {\n    //     return val.Tags.includes(word);\n    //   })\n    //     this.setState({contacts:array})\n        }\n\n        \n\n    // filterMain(word){\n    //   //from the array\n    //   const array = this.state.contacts;\n    //   console.log('this is array'+array);\n\n    //   const filtered = array.filter(val => {\n    //     return val.Tags.includes(word);\n    //   })\n    //   return filtered;\n    // }\n\n    \n\n  render() {\n    //console.log(\"test\"+this.state.contacts)\n    return(\n        <div className = \"filter-opp-wrapper\">\n          <div className = \"full-filter-wrapper\"> \n          <Filters></Filters>\n          </div>\n\n          <div className = \"add-box-wrapper\"> \n          <SmartButton onClick = {this.handleClick}></SmartButton>\n\n          <AddOpp></AddOpp>\n          <div className = \"opp-box-wrapper\"> \n        \n            <OppBox contacts = {this.state.contacts}> </OppBox> \n        </div>\n        </div>\n        </div>\n    );\n}\n}\n\nexport default Opps;\n\n//test to write a button that enables filters\nconst SmartButton = ( {contacts} ) => {\n\n    return(\n        <button className = \"filter-button\" >Click Me </button>\n\n    )\n  }"]},"metadata":{},"sourceType":"module"}