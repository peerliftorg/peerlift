{"ast":null,"code":"var _jsxFileName = \"/Users/samgorman/src/pl-connect/client/src/containers/Opps.js\";\n//This is a stateful React container that handles fetching scholarship data, sorting scholarships, \n// filtering scholarships, and rendering these scholarships by mapping over each scholarship with OppBox.\n// See functions for more explanation.  \"Contact\" is currently the convention for the array of objects containing\n// scholarship data.\nimport React, { Component } from 'react';\nimport '../components/OppBox.css';\nimport '../components/filters.css';\nimport '../components/mobileFilter.css';\nimport Filters from \"../components/filters\";\nimport MobileFilter from \"../components/mobileFilter\";\nimport OppBox from '../components/OppBox';\nimport AddOpp from '../components/addOpp.js';\nimport NoResults from '../components/noResults.js';\nimport OppPage from '../components/oppPage.js';\nimport Backdrop from '../components/backdrop.js';\nimport { withRouter, Link, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport check from \"../images/check@2x.svg\";\nimport blackcheck from \"../images/blackcheck@2x.svg\"; // //This is a constructor for a component \n\nclass Opps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      contacts_const: [],\n      activeId: \"\",\n      filters: false,\n      isEmpty: false,\n      onOpp: false,\n      onStem: false,\n      onLowIncome: false,\n      onDiversity: false,\n      onService: false,\n      onNine: false,\n      onTen: false,\n      onEleven: false,\n      onTwelve: false\n    };\n  } //This function handles fetching all scholarship data.  Then, it sorts the produced array in ascending order to the current date.\n\n\n  componentDidMount() {\n    fetch('/api/scholarships').then(res => res.json()).then(data => {\n      //data is an array, let's sort it by closest to current date\n      data.sort(function (a, b) {\n        var currDate = new Date(); //create date variables for each one\n\n        var c = new Date(a.FilterDate);\n        var d = new Date(b.FilterDate);\n        var e = Math.abs(currDate - c);\n        var f = Math.abs(currDate - d);\n        return e - f;\n      });\n      this.setState({\n        contacts: data\n      }); //Define a constant state of the data, that we'll use to reset the state when needed.\n\n      this.setState({\n        contacts_const: data\n      });\n    }).catch(console.log);\n  } //This function sets a bool state of whether mobile filters are active or not, \n  //triggering conditional rendering.\n\n\n  handleClickFilters() {\n    this.setState({\n      filters: !this.state.filters\n    });\n  } //This function handles filtering logic for the stem tag.  If the stem filter is clicked,\n  // this function creates a copy of the current scholarships array, then filters to include\n  // based on the given word.  If not, the state is reset, and scholarships data is reset to its original state.\n\n\n  handleClickStem(word) {\n    //code for onStem\n    if (!this.state.onStem) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onStem: !this.state.onStem\n      }); //if contacts is now empty\n\n      if (this.state.contacts === undefined || this.state.contacts.length == 0) {\n        this.setState({\n          isEmpty: true\n        });\n        console.log(\"this ran\");\n      }\n    } else if (this.state.onStem) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onStem: !this.state.onStem\n      });\n    }\n  }\n\n  handleClickService(word) {\n    //code for onStem\n    if (!this.state.onService) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onService: !this.state.onService\n      });\n    } else if (this.state.onService) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onService: !this.state.onService\n      });\n    }\n  }\n\n  handleClickLi(word) {\n    //code for onStem\n    if (!this.state.onLowIncome) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onLowIncome: !this.state.onLowIncome\n      });\n    } else if (this.state.onLowIncome) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onLowIncome: !this.state.onLowIncome\n      });\n    }\n  }\n\n  handleClickDiversity(word) {\n    //code for onStem\n    if (!this.state.onDiversity) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onDiversity: !this.state.onDiversity\n      });\n    } else if (this.state.onDiversity) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onDiversity: !this.state.onDiversity\n      });\n    }\n  }\n\n  handleClickNine(word) {\n    //code for onStem\n    if (!this.state.onNine) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onNine: !this.state.onNine\n      });\n    } else if (this.state.onNine) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onNine: !this.state.onNine\n      });\n    }\n  }\n\n  handleClickTen(word) {\n    //code for onStem\n    if (!this.state.onTen) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onTen: !this.state.onTen\n      });\n    } else if (this.state.onTen) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onTen: !this.state.onTen\n      });\n    }\n  }\n\n  handleClickEleven(word) {\n    //code for onStem\n    if (!this.state.onEleven) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onEleven: !this.state.onEleven\n      });\n    } else if (this.state.onEleven) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onEleven: !this.state.onEleven\n      });\n    }\n  }\n\n  handleClickTwelve(word) {\n    //code for onStem\n    if (!this.state.onTwelve) {\n      //take the modified contact list\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        onTwelve: !this.state.onTwelve\n      });\n    } else if (this.state.onTwelve) {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        onTwelve: !this.state.onTwelve\n      });\n    }\n  }\n\n  render() {\n    //console.log(\"test\"+this.state.contacts)\n    //we want to reset value to normal\n    var word;\n    var oppId;\n    console.log(this.state.isEmpty);\n    return React.createElement(\"div\", {\n      className: \"filter-opp-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, React.createElement(MobileFilter, {\n      onPress: () => this.handleClickFilters(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: this.state.filters ? \"full-filter-clicked\" : \"full-filter-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, \"Filter \"), React.createElement(\"div\", {\n      className: \"grade-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }, \"Grade: \"), React.createElement(\"button\", {\n      className: this.state.onNine ? \"button-clicked\" : \"filter-button\",\n      onClick: () => this.handleClickNine(word = \"freshman\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \" 9\"), React.createElement(\"button\", {\n      className: this.state.onTen ? \"button-clicked\" : \"filter-button\",\n      onClick: () => this.handleClickTen(word = \"sophomore\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \" 10 \"), React.createElement(\"button\", {\n      className: this.state.onEleven ? \"button-clicked\" : \"filter-button\",\n      onClick: () => this.handleClickEleven(word = \"junior\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"11 \"), React.createElement(\"button\", {\n      className: this.state.onTwelve ? \"button-clicked\" : \"filter-button\",\n      onClick: () => this.handleClickTwelve(word = \"senior\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, \"12 \")), React.createElement(\"div\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, \" Tags:\"), React.createElement(\"div\", {\n      className: \"tag-grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"stem tag-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"STEM \"), React.createElement(\"button\", {\n      className: this.state.onStem ? \"button-clicked stemButton\" : \"filter-button stemButton \",\n      onClick: () => this.handleClickStem(word = \"STEM\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.state.onStem && React.createElement(\"img\", {\n      src: this.state.filters ? blackcheck : check,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"div\", {\n      className: \"lowIncome tag-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, \"Low-Income \"), React.createElement(\"button\", {\n      className: this.state.onLowIncome ? \"button-clicked lowIncomeButton\" : \"filter-button lowIncomeButton \",\n      onClick: () => this.handleClickLi(word = \"low-income\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, this.state.onLowIncome && React.createElement(\"img\", {\n      src: this.state.filters ? blackcheck : check,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"div\", {\n      className: \"diversity tag-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, \"Diversity \"), React.createElement(\"button\", {\n      className: this.state.onDiversity ? \"button-clicked diversityButton\" : \"filter-button diversityButton \",\n      onClick: () => this.handleClickDiversity(word = \"diversity\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, this.state.onDiversity && React.createElement(\"img\", {\n      src: this.state.filters ? blackcheck : check,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    }), \"  \"), React.createElement(\"div\", {\n      className: \"service tag-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, \"Service \"), React.createElement(\"button\", {\n      className: this.state.onService ? \"button-clicked serviceButton\" : \"filter-button serviceButton \",\n      onClick: () => this.handleClickService(word = \"service\"),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, this.state.onService && React.createElement(\"img\", {\n      src: this.state.filters ? blackcheck : check,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), \"  \"))), React.createElement(\"div\", {\n      className: \"add-box-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(AddOpp, {\n      title: \"scholarship\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"opp-box-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, this.state.isEmpty && React.createElement(NoResults, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }), this.state.contacts.map(contact => React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/scholarships/\".concat(contact._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, React.createElement(OppBox, {\n      id: contact._id,\n      title: contact.Title,\n      amount: contact.DescriptionAmount,\n      grade: contact.Grade,\n      date: contact.DescriptionDate,\n      link: contact.Link,\n      description: contact.Description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    })))), \";\")));\n  }\n\n}\n\nexport default withRouter(Opps);","map":{"version":3,"sources":["/Users/samgorman/src/pl-connect/client/src/containers/Opps.js"],"names":["React","Component","Filters","MobileFilter","OppBox","AddOpp","NoResults","OppPage","Backdrop","withRouter","Link","BrowserRouter","Router","Switch","Route","Opps","constructor","props","state","contacts","contacts_const","activeId","filters","isEmpty","onOpp","onStem","onLowIncome","onDiversity","onService","onNine","onTen","onEleven","onTwelve","componentDidMount","fetch","then","res","json","data","sort","a","b","currDate","Date","c","FilterDate","d","e","Math","abs","f","setState","catch","console","log","handleClickFilters","handleClickStem","word","array","arrayTwo","filter","item","Tags","includes","undefined","length","handleClickService","handleClickLi","handleClickDiversity","handleClickNine","handleClickTen","handleClickEleven","handleClickTwelve","render","oppId","blackcheck","check","map","contact","_id","Title","DescriptionAmount","Grade","DescriptionDate","Description"],"mappings":"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","sourcesContent":["//This is a stateful React container that handles fetching scholarship data, sorting scholarships, \n// filtering scholarships, and rendering these scholarships by mapping over each scholarship with OppBox.\n// See functions for more explanation.  \"Contact\" is currently the convention for the array of objects containing\n// scholarship data.\n\n\nimport React, {Component} from 'react'; \nimport '../components/OppBox.css';\nimport '../components/filters.css';\nimport '../components/mobileFilter.css';\nimport Filters from \"../components/filters\";\nimport MobileFilter from \"../components/mobileFilter\";\nimport OppBox from '../components/OppBox';\nimport AddOpp from '../components/addOpp.js';\nimport NoResults from '../components/noResults.js';\n\nimport OppPage from '../components/oppPage.js';\nimport Backdrop from '../components/backdrop.js';\nimport { withRouter, Link, BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport check from '../images/check@2x.svg';\nimport blackcheck from '../images/blackcheck@2x.svg';\n\n\n\n// //This is a constructor for a component \nclass Opps extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      contacts: [],\n      contacts_const: [],\n      activeId: \"\",\n      filters: false,\n      isEmpty: false,\n      onOpp: false,\n      onStem: false,\n      onLowIncome: false,\n      onDiversity: false,\n      onService: false,\n      onNine: false,\n      onTen: false,\n      onEleven: false,\n      onTwelve: false\n\n\n    };\n    \n  }\n  //This function handles fetching all scholarship data.  Then, it sorts the produced array in ascending order to the current date.\n  componentDidMount() {\n    fetch('/api/scholarships')\n      .then(res => res.json())\n      .then((data) => {\n        //data is an array, let's sort it by closest to current date\n        data.sort(function(a,b){\n          var currDate = new Date();\n          //create date variables for each one\n          var c = new Date(a.FilterDate);\n          var d = new Date(b.FilterDate);\n\n          var e = Math.abs(currDate-c);\n          var f = Math.abs(currDate-d);\n          return e-f;\n        })\n        this.setState({ contacts: data })\n        //Define a constant state of the data, that we'll use to reset the state when needed.\n        this.setState({ contacts_const: data })\n      })\n      .catch(console.log)\n  }\n\n        //This function sets a bool state of whether mobile filters are active or not, \n        //triggering conditional rendering.\n         handleClickFilters(){\n            this.setState({filters: !this.state.filters});\n        }\n\n\n    //This function handles filtering logic for the stem tag.  If the stem filter is clicked,\n    // this function creates a copy of the current scholarships array, then filters to include\n    // based on the given word.  If not, the state is reset, and scholarships data is reset to its original state.\n    handleClickStem(word) {\n        //code for onStem\n        if (!this.state.onStem){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onStem:!this.state.onStem})\n            //if contacts is now empty\n            if (this.state.contacts === undefined || this.state.contacts.length == 0) {\n                this.setState({isEmpty: true})\n                console.log(\"this ran\")\n            }\n        }\n        else if (this.state.onStem){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onStem:!this.state.onStem})\n        }\n    }\n\n    handleClickService(word) {\n        //code for onStem\n        if (!this.state.onService){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onService:!this.state.onService})\n        }\n        else if (this.state.onService){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onService:!this.state.onService})\n        }\n    }\n\n    handleClickLi(word) {\n        //code for onStem\n        if (!this.state.onLowIncome){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onLowIncome:!this.state.onLowIncome})\n        }\n        else if (this.state.onLowIncome){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onLowIncome:!this.state.onLowIncome})\n        }\n    }\n\n    handleClickDiversity(word) {\n        //code for onStem\n        if (!this.state.onDiversity){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onDiversity:!this.state.onDiversity})\n        }\n        else if (this.state.onDiversity){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onDiversity:!this.state.onDiversity})\n        }\n    }\n\n    handleClickNine(word) {\n        //code for onStem\n        if (!this.state.onNine){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onNine:!this.state.onNine})\n        }\n        else if (this.state.onNine){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onNine:!this.state.onNine})\n        }\n    }\n\n    handleClickTen(word) {\n        //code for onStem\n        if (!this.state.onTen){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onTen:!this.state.onTen})\n            \n        }\n        else if (this.state.onTen){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onTen:!this.state.onTen})\n        }\n    }\n\n    handleClickEleven(word) {\n        //code for onStem\n        if (!this.state.onEleven){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onEleven:!this.state.onEleven})\n        }\n        else if (this.state.onEleven){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onEleven:!this.state.onEleven})\n        }\n    }\n\n    handleClickTwelve(word) {\n        //code for onStem\n        if (!this.state.onTwelve){\n            //take the modified contact list\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({onTwelve:!this.state.onTwelve})\n        }\n        else if (this.state.onTwelve){\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({onTwelve:!this.state.onTwelve})\n        }\n    }\n\n\n  render() {\n    //console.log(\"test\"+this.state.contacts)\n    //we want to reset value to normal\n    var word;\n    var oppId;\n    console.log(this.state.isEmpty);\n\n    return(\n        <div className = \"filter-opp-wrapper\">\n        {/* Set to display: none on desktop */}\n            <MobileFilter onPress={() => this.handleClickFilters()}></MobileFilter>\n\n          <div className = {this.state.filters ? \"full-filter-clicked\": \"full-filter-wrapper\"}> \n            <div className = \"header\">Filter </div>\n\n            <div className = \"grade-wrapper\">\n            <div className = \"title\">Grade: </div>\n            <button className={this.state.onNine ? \"button-clicked\": \"filter-button\"} onClick={() => this.handleClickNine(word = \"freshman\")}> 9</button>\n            <button className={this.state.onTen ? \"button-clicked\": \"filter-button\"}  onClick={() => this.handleClickTen(word = \"sophomore\")}> 10 </button>\n            <button className={this.state.onEleven ? \"button-clicked\": \"filter-button\"}  onClick={() => this.handleClickEleven(word = \"junior\")}>11 </button>\n            <button className={this.state.onTwelve ? \"button-clicked\": \"filter-button\"}  onClick={() => this.handleClickTwelve(word = \"senior\")}>12 </button>\n            </div>\n\n            <div className = \"title\"> Tags:</div>\n            <div className = \"tag-grid\"> \n\n            {/* Each segment below checks if a filter button is active, assigns appropriate styling, and triggers\n            a rerender with the corresponding handleClick function. */}\n            <div className = \"stem tag-text\">STEM </div>\n            <button className={this.state.onStem ? \"button-clicked stemButton\": \"filter-button stemButton \"} onClick={() => this.handleClickStem(word = \"STEM\")}>\n            {this.state.onStem && <img src = {this.state.filters ? blackcheck:check}></img>}  </button>\n\n            <div className = \"lowIncome tag-text\">Low-Income </div>\n            <button className={this.state.onLowIncome ? \"button-clicked lowIncomeButton\": \"filter-button lowIncomeButton \"} onClick={() => this.handleClickLi(word = \"low-income\")}>\n            {this.state.onLowIncome && <img src = {this.state.filters ? blackcheck:check}></img>}  </button> \n\n            <div className = \"diversity tag-text\">Diversity </div>\n            <button className={this.state.onDiversity ? \"button-clicked diversityButton\": \"filter-button diversityButton \" } onClick={() => this.handleClickDiversity(word = \"diversity\")}>\n            {this.state.onDiversity && <img src = {this.state.filters ? blackcheck:check}></img>}  </button> \n\n            <div className = \"service tag-text\">Service </div>\n            <button className={this.state.onService ? \"button-clicked serviceButton\": \"filter-button serviceButton \"} onClick={() => this.handleClickService(word = \"service\")}> \n            {this.state.onService && <img src = {this.state.filters ? blackcheck:check}></img>}  </button> \n\n            </div>\n          \n\n          </div>\n    \n            \n\n          <div className = \"add-box-wrapper\"> \n\n          <AddOpp\n          title = \"scholarship\"\n          ></AddOpp>\n\n          <div className = \"opp-box-wrapper\"> \n            {this.state.isEmpty &&\n            <NoResults></NoResults>}\n            {/* Map over the array of scholarship objects, and provide all data as props for OppBox. */}\n           {this.state.contacts.map((contact) =>\n             <React.Fragment> \n        \n             {/* <Route exact path = \"/scholarships/:id\"  component = {OppPage} >  */}\n             <Link to = {`/scholarships/${contact._id}`}>\n\n            <OppBox \n            id = {contact._id}\n            title = {contact.Title}\n            amount = {contact.DescriptionAmount}\n            grade = {contact.Grade}\n            date = {contact.DescriptionDate}\n            link = {contact.Link}\n            description = {contact.Description}\n            > \n             </OppBox> \n             </Link>\n            {/* //   </Route>  */}\n\n              </React.Fragment>\n\n            )};\n        </div>\n        </div>\n        </div>\n    );\n}\n}\n\nexport default withRouter(Opps);\n\n"]},"metadata":{},"sourceType":"module"}