{"ast":null,"code":"var _jsxFileName = \"/Users/samgorman/src/pl-connect/client/src/containers/Opps.js\";\nimport React, { Component } from 'react';\nimport '../components/OppBox.css';\nimport Filters from \"../components/filters\";\nimport OppBox from '../components/OppBox';\nimport AddOpp from '../components/addOpp.js'; //need to import contacts to here\n// //This is a constructor for a component \n\nclass Opps extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      contacts: [],\n      contacts_const: [],\n      on: false\n    }; // This binding is necessary to make `this` work in the callback-- added from tut\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/users').then(res => res.json()).then(data => {\n      //data is an array, let's sort it by closest to current date\n      data.sort(function (a, b) {\n        var currDate = new Date(); //create date variables for each one\n\n        var c = new Date(a.FilterDate);\n        var d = new Date(b.FilterDate);\n        var e = Math.abs(currDate - c);\n        var f = Math.abs(currDate - d);\n        return e - f;\n      });\n      this.setState({\n        contacts: data\n      }); //give constant a value\n\n      this.setState({\n        contacts_const: data\n      });\n    }).catch(console.log);\n  } //filter the results\n\n\n  handleClick(word) {\n    //set the state of contacts at the end\n    if (!this.state.on) {\n      const word = \"STEM\";\n      const array = this.state.contacts;\n      const arrayTwo = array.filter(item => {\n        //console.log(item.Tags)\n        return item.Tags.includes(word);\n      });\n      this.setState({\n        contacts: arrayTwo\n      });\n      this.setState({\n        on: !this.state.on\n      });\n    } else {\n      this.setState({\n        contacts: this.state.contacts_const\n      });\n      this.setState({\n        on: !this.state.on\n      });\n    }\n  }\n\n  render() {\n    //console.log(\"test\"+this.state.contacts)\n    //we want to reset value to normal\n    return React.createElement(\"div\", {\n      className: \"filter-opp-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"full-filter-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      value: \"stem\",\n      onClick: this.handleClick(word),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" \"), React.createElement(Filters, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"add-box-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(AddOpp, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"opp-box-wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(OppBox, {\n      contacts: this.state.contacts,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \" \"))));\n  }\n\n}\n\nexport default Opps; //test to write a button that enables filters\n// class Toggle extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state = {\n//           on: false\n//         };\n//         toggle = () => {\n//             this.setState(\n//                 {on:!this.state.on}\n//             )\n//         }\n//          // This binding is necessary to make `this` work in the callback-- added from tut\n//          //this.handleClick = this.handleClick.bind(this);\n//       }\n//     render(){\n//         return(\n//         <div> \n//         {this.state.on && <h1>test</h1>}\n//         <button className = \"filter-button\" >Click Me </button>\n//         </div>\n//         );\n//     }\n// }\n\nconst SmartButton = ({\n  contacts\n}) => {\n  return React.createElement(\"button\", {\n    className: \"filter-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, \"Click Me \");\n};","map":{"version":3,"sources":["/Users/samgorman/src/pl-connect/client/src/containers/Opps.js"],"names":["React","Component","Filters","OppBox","AddOpp","Opps","constructor","props","state","contacts","contacts_const","on","handleClick","bind","componentDidMount","fetch","then","res","json","data","sort","a","b","currDate","Date","c","FilterDate","d","e","Math","abs","f","setState","catch","console","log","word","array","arrayTwo","filter","item","Tags","includes","render","SmartButton"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'; \nimport '../components/OppBox.css';\nimport Filters from \"../components/filters\";\nimport OppBox from '../components/OppBox';\nimport AddOpp from '../components/addOpp.js';\n\n//need to import contacts to here\n// //This is a constructor for a component \nclass Opps extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      contacts: [],\n      contacts_const: [],\n      on: false\n    };\n     // This binding is necessary to make `this` work in the callback-- added from tut\n     this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:9000/users')\n      .then(res => res.json())\n      .then((data) => {\n        //data is an array, let's sort it by closest to current date\n        data.sort(function(a,b){\n          var currDate = new Date();\n          //create date variables for each one\n          var c = new Date(a.FilterDate);\n          var d = new Date(b.FilterDate);\n\n          var e = Math.abs(currDate-c);\n          var f = Math.abs(currDate-d);\n          return e-f;\n        })\n        this.setState({ contacts: data })\n        //give constant a value\n        this.setState({ contacts_const: data })\n      })\n      .catch(console.log)\n  }\n\n        //filter the results\n        handleClick(word) {\n        //set the state of contacts at the end\n        if (!this.state.on){\n            const word = \"STEM\";\n            const array = this.state.contacts;\n            const arrayTwo = array.filter(item => {\n                //console.log(item.Tags)\n                return item.Tags.includes(word);\n              })    \n            this.setState({contacts:arrayTwo})\n            this.setState({on:!this.state.on})\n        }\n        else{\n            this.setState({contacts:this.state.contacts_const})\n            this.setState({on:!this.state.on})\n        }\n    }\n\n  render() {\n    //console.log(\"test\"+this.state.contacts)\n    //we want to reset value to normal\n    return(\n        <div className = \"filter-opp-wrapper\">\n          <div className = \"full-filter-wrapper\"> \n          \n          <button value = \"stem\" onClick={this.handleClick(word)}> </button>\n\n          <Filters></Filters>\n          </div>\n\n          <div className = \"add-box-wrapper\"> \n\n          <AddOpp></AddOpp>\n          <div className = \"opp-box-wrapper\"> \n        \n            <OppBox contacts = {this.state.contacts}> </OppBox> \n        </div>\n        </div>\n        </div>\n    );\n}\n}\n\nexport default Opps;\n\n//test to write a button that enables filters\n// class Toggle extends Component{\n    \n//     constructor(props){\n//         super(props);\n//         this.state = {\n//           on: false\n//         };\n\n//         toggle = () => {\n//             this.setState(\n//                 {on:!this.state.on}\n//             )\n//         }\n//          // This binding is necessary to make `this` work in the callback-- added from tut\n//          //this.handleClick = this.handleClick.bind(this);\n//       }\n\n//     render(){\n//         return(\n//         <div> \n//         {this.state.on && <h1>test</h1>}\n//         <button className = \"filter-button\" >Click Me </button>\n//         </div>\n\n//         );\n//     }\n// }\n\n\n\nconst SmartButton = ( {contacts} ) => {\n    \n    return(\n        <button className = \"filter-button\" >Click Me </button>\n\n    )\n  }"]},"metadata":{},"sourceType":"module"}